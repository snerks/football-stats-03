{"version":3,"sources":["components/points2019.ts","components/points2016.ts","components/points2017.ts","components/points2018.ts","components/points-line-chart.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["points2019","points2016","points2017","points2018","PointsLineChart","state","showTrendLines","show2016","show2017","show2018","show2019","handleShowTrendLines","setState","prevState","nextState","handleShow2016","handleShow2017","handleShow2018","handleShow2019","redLineColour","redLegendFillColour","purpleLineColour","purpleLegendFillColour","slateBlueLineColour","slateBlueLegendFillColour","greyLineColour","aliceBlueLineColour","aliceBlueLegendFillColour","greenLineColour","greenLegendFillColour","orangeLineColour","orangeLegendFillColour","pointsRunning2016","index","length","nextElement","push","pointsRunning2017","pointsRunning2018","pointsRunning2019","dataPointCount","labels","element","toString","chartData","datasets","this","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","playoffFormValues","relegationFormValues","style","position","height","className","margin","type","id","onChange","htmlFor","marginLeft","checked","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","scaleLabel","display","labelString","xAxes","width","redraw","React","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6UAAaA,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GCjCWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,GCnDWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GChDWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,G,ujBCyZaC,E,2MAhbbC,MAAQ,CACNC,gBAAgB,EAEhBC,UAAU,EACVC,UAAU,EACVC,UAAU,EACVC,UAAU,G,EAGZC,qBAAuB,WACrB,EAAKC,SAAS,SAAAC,GACZ,IAAMC,EAAS,KAAQD,GAGvB,OAFAC,EAAUR,gBAAkBO,EAAUP,eAE/BQ,K,EAIXC,eAAiB,WACf,EAAKH,SAAS,SAAAC,GACZ,IAAMC,EAAS,KAAQD,GAGvB,OAFAC,EAAUP,UAAYM,EAAUN,SAE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","file":"static/js/main.8d4f3e5a.chunk.js","sourcesContent":["export const points2019: number[] = [\r\n  0, // Dummy 0th result\r\n  0, // 0-2 Leeds (H)\r\n  1, // 1-1 Birmingham (A)\r\n  3, // 2-0 QPR (H)\r\n  3, // 1-2 Derby (A)\r\n  3, // 1-2 Hull (A)\r\n  1, // 2-2 Middlesbrough (H)\r\n  3, // 1-2 Stoke (A)\r\n  1, // 0-0 Swansea (H)\r\n  1, // 3-3 Preston (A)\r\n  1, // 1-1 Brentford (A)\r\n  3, // 1-0 Reading (H)\r\n  0, // 0-3 Luton (A)\r\n  3, // 2-1 Charlton (H)\r\n  1, // 2-2 Wigan (H)\r\n  1, // 2-2 Barnsley (A)\r\n  3, // 0-1 Cardiff (A)\r\n  1, // 0-0 Nottingham Forest (H)\r\n  0, // 4-1 West Bromich Albion (A)\r\n  3, // 5-2 Huddersfield (H)\r\n  3, // 1-2 Fulham (A)\r\n  0, // 1-2 Milwall (H)\r\n  0, // 0-2 Blackburn (H)\r\n  0, // 1-0 Sheffield Wednesday (A)\r\n  0, // 3-2 Charlton (A)\r\n  3, // 3-0 Luton (H)\r\n  0, // 0-4 Brentford (H)\r\n  3, // 0-2 Wigan (A)\r\n  3, // 1-0 Barnsley (H)\r\n  3, // 0-1 Reading (A)\r\n  3, // 0-1 QPR (A)\r\n  0, // 1-3 Birmingham (H)\r\n  3 // 3-2 Derby (H)\r\n];\r\n","export const points2016: number[] = [\r\n  0,\r\n  3,\r\n  3,\r\n  0,\r\n  0,\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  1,\r\n  3, // 24 Sep\r\n\r\n  3,\r\n  3,\r\n  0,\r\n  0,\r\n  3,\r\n  1,\r\n  0,\r\n  0,\r\n  0,\r\n  3, // 3 Dec\r\n\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  0,\r\n  1,\r\n  3, // 4 Feb 2017\r\n\r\n  1,\r\n  0,\r\n  0,\r\n  1,\r\n  0,\r\n  1,\r\n  1,\r\n  3,\r\n  3,\r\n  0, // 4 Apr 2017\r\n\r\n  3,\r\n  3,\r\n  1,\r\n  3,\r\n  3,\r\n  0\r\n];\r\n","export const points2017: number[] = [\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  1,\r\n  1,\r\n  3,\r\n  1,\r\n  3,\r\n  1,\r\n  3, // 26 Sep\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  3, // 3 Dec\r\n  3,\r\n  3,\r\n  1,\r\n  3,\r\n  0, // 30 Dec\r\n\r\n  0,\r\n  0,\r\n  1,\r\n  3,\r\n  0, // 2 Feb 2018\r\n  1,\r\n  1,\r\n  1,\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  3,\r\n  1,\r\n  0, // 2 Apr 2018\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  1,\r\n  0\r\n];\r\n","export const points2018: number[] = [\r\n  0,\r\n  1,\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  3,\r\n  3,\r\n  0,\r\n  0,\r\n  1, // 28 Sep\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  0,\r\n  0, // 03 Nov\r\n  0,\r\n  0,\r\n  3,\r\n  1,\r\n  3, // 08 Dec\r\n  1,\r\n  1,\r\n  1,\r\n  3, // 29 Dec\r\n  3,\r\n  3,\r\n  3,\r\n  3,\r\n  3, // 09 Feb\r\n  3,\r\n  0,\r\n  0,\r\n  1,\r\n  0,\r\n  1,\r\n  3, // 30 Mar\r\n  3,\r\n  1,\r\n  3,\r\n  0,\r\n  1,\r\n  0,\r\n  0,\r\n  3,\r\n  1\r\n];\r\n","import * as React from \"react\";\r\n\r\nimport { Line, ChartData } from \"react-chartjs-2\";\r\nimport * as chartjs from \"chart.js\";\r\nimport { points2019 } from \"./points2019\";\r\nimport { points2016 } from \"./points2016\";\r\nimport { points2017 } from \"./points2017\";\r\nimport { points2018 } from \"./points2018\";\r\n\r\ninterface PointsLineChartProps {}\r\n\r\ninterface PointsLineChartState {\r\n  showTrendLines: boolean;\r\n\r\n  show2016: boolean;\r\n  show2017: boolean;\r\n  show2018: boolean;\r\n  show2019: boolean;\r\n}\r\n\r\nclass PointsLineChart extends React.Component<\r\n  PointsLineChartProps,\r\n  PointsLineChartState\r\n> {\r\n  state = {\r\n    showTrendLines: false,\r\n\r\n    show2016: false,\r\n    show2017: false,\r\n    show2018: true,\r\n    show2019: true\r\n  };\r\n\r\n  handleShowTrendLines = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showTrendLines = !prevState.showTrendLines;\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShow2016 = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.show2016 = !prevState.show2016;\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShow2017 = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.show2017 = !prevState.show2017;\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShow2018 = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.show2018 = !prevState.show2018;\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShow2019 = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.show2019 = !prevState.show2019;\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const redRgba = \"255, 0, 0\";\r\n    const redLineColour = `rgba(${redRgba}, 1)`;\r\n    const redLegendFillColour = `rgba(${redRgba}, 0.4)`;\r\n\r\n    // 128, 0, 128\r\n    const purpleRgba = \"85, 85, 85\";\r\n    const purpleLineColour = `rgba(${purpleRgba}, 1)`;\r\n    const purpleLegendFillColour = `rgba(${purpleRgba}, 0.4)`;\r\n\r\n    const slateBlueRgba = \"0, 100, 0\";\r\n    const slateBlueLineColour = `rgba(${slateBlueRgba}, 1)`;\r\n    const slateBlueLegendFillColour = `rgba(${slateBlueRgba}, 0.4)`;\r\n\r\n    const greyRgba = \"220, 220, 220\";\r\n    const greyLineColour = `rgba(${greyRgba}, 1)`;\r\n    // const greyLegendFillColour = `rgba(${greyRgba}, 0.4)`;\r\n\r\n    // 2016 - Alice Blue\r\n    const aliceBlueRgba = \"0, 0, 255\";\r\n    const aliceBlueLineColour = `rgba(${aliceBlueRgba}, 1)`;\r\n    const aliceBlueLegendFillColour = `rgba(${aliceBlueRgba}, 0.4)`;\r\n\r\n    const greenRgba = \"75, 192, 192\";\r\n    const greenLineColour = `rgba(${greenRgba}, 1)`;\r\n    const greenLegendFillColour = `rgba(${greenRgba}, 0.4)`;\r\n\r\n    const orangeRgba = \"255, 165, 0\";\r\n    const orangeLineColour = `rgba(${orangeRgba}, 1)`;\r\n    const orangeLegendFillColour = `rgba(${orangeRgba}, 0.4)`;\r\n\r\n    const pointsRunning2016: number[] = [];\r\n\r\n    for (let index = 0; index < points2016.length; index++) {\r\n      const runningTotal = index === 0 ? 0 : pointsRunning2016[index - 1];\r\n\r\n      const nextElement = runningTotal + points2016[index];\r\n\r\n      pointsRunning2016.push(nextElement);\r\n    }\r\n\r\n    const pointsRunning2017: number[] = [];\r\n\r\n    for (let index = 0; index < points2017.length; index++) {\r\n      const runningTotal = index === 0 ? 0 : pointsRunning2017[index - 1];\r\n\r\n      const nextElement = runningTotal + points2017[index];\r\n\r\n      pointsRunning2017.push(nextElement);\r\n    }\r\n\r\n    const pointsRunning2018: number[] = [];\r\n\r\n    for (let index = 0; index < points2018.length; index++) {\r\n      const runningTotal = index === 0 ? 0 : pointsRunning2018[index - 1];\r\n\r\n      const nextElement = runningTotal + points2018[index];\r\n\r\n      pointsRunning2018.push(nextElement);\r\n    }\r\n\r\n    const pointsRunning2019: number[] = [];\r\n\r\n    for (let index = 0; index < points2019.length; index++) {\r\n      const runningTotal = index === 0 ? 0 : pointsRunning2019[index - 1];\r\n\r\n      const nextElement = runningTotal + points2019[index];\r\n\r\n      pointsRunning2019.push(nextElement);\r\n    }\r\n\r\n    const dataPointCount = pointsRunning2018.length;\r\n\r\n    const labels: string[] = [];\r\n\r\n    for (let index = 0; index < dataPointCount; index++) {\r\n      // const gameNumber = index + 1;\r\n      const gameNumber = index;\r\n\r\n      // const element = (index + 1) % 5 === 0 ? (index + 1).toString(10) : \"\";\r\n      const element =\r\n        (gameNumber % 5 === 0 ||\r\n          gameNumber === 1 ||\r\n          gameNumber === 23 ||\r\n          gameNumber === 46) &&\r\n        gameNumber !== 45\r\n          ? gameNumber.toString(10)\r\n          : \"\";\r\n\r\n      labels.push(element);\r\n    }\r\n\r\n    const chartData: ChartData<chartjs.ChartData> = {\r\n      // labels: Array(dataPointCount)\r\n      //   .fill(0)\r\n      //   .map((e, i) => (i + 1).toString(10)),\r\n\r\n      labels: labels,\r\n\r\n      datasets: []\r\n    };\r\n\r\n    if (this.state.show2016) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          label: \"2016-\",\r\n          fill: false,\r\n          lineTension: 0.1,\r\n\r\n          backgroundColor: aliceBlueLegendFillColour,\r\n          borderColor: aliceBlueLineColour,\r\n\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [3, 3],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: aliceBlueLineColour,\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: aliceBlueLineColour,\r\n          pointHoverBorderColor: greyLineColour,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: pointsRunning2016\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.show2017) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          label: \"2017-\",\r\n          fill: false,\r\n          lineTension: 0.1,\r\n\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [3, 3],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: purpleLineColour,\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          pointHoverBorderColor: greyLineColour,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: pointsRunning2017\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.show2018) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          label: \"2018-\",\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [3, 3],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          pointHoverBorderColor: greyLineColour,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: pointsRunning2018\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.show2019) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          label: \"2019-\",\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: redLegendFillColour,\r\n          borderColor: redLineColour,\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: redLineColour,\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: redLineColour,\r\n          pointHoverBorderColor: greyLineColour,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n          data: pointsRunning2019\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showTrendLines) {\r\n      const playoffFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        // const element = (index + 1) * 1.7;\r\n        const element = index * 1.61;\r\n        playoffFormValues.push(element);\r\n      }\r\n\r\n      const relegationFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        const element = index * 1.0;\r\n        relegationFormValues.push(element);\r\n      }\r\n\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          label: \"Playoffs\",\r\n          fill: false,\r\n          lineTension: 0.1,\r\n\r\n          backgroundColor: greenLegendFillColour,\r\n          borderColor: greenLineColour,\r\n\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [5, 15],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: greenLineColour,\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: greenLineColour,\r\n          pointHoverBorderColor: greyLineColour,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n\r\n          data: playoffFormValues\r\n        });\r\n\r\n        chartData.datasets.push({\r\n          label: \"Relegation\",\r\n          fill: false,\r\n          lineTension: 0.1,\r\n\r\n          backgroundColor: orangeLegendFillColour,\r\n          borderColor: orangeLineColour,\r\n\r\n          borderCapStyle: \"butt\",\r\n          borderDash: [5, 15],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: \"miter\",\r\n          pointBorderColor: orangeLineColour,\r\n          pointBackgroundColor: \"#fff\",\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 5,\r\n          pointHoverBackgroundColor: orangeLineColour,\r\n          pointHoverBorderColor: greyLineColour,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n\r\n          data: relegationFormValues\r\n        });\r\n      }\r\n    }\r\n\r\n    const chartOptions = {\r\n      // responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Points Total\"\r\n            }\r\n          }\r\n        ],\r\n        xAxes: [\r\n          {\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Games Played\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ position: \"relative\", height: \"80vh\" }}>\r\n        <div\r\n          className=\"custom-control custom-checkbox\"\r\n          style={{ margin: \"10px 30px 5px 25px\" }}\r\n        >\r\n          <label className=\"custom-control-label\">Show: </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck1\"\r\n            onChange={() => this.handleShowTrendLines()}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n            Trend Lines\r\n          </label>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"show2016Checkbox\"\r\n            onChange={() => this.handleShow2016()}\r\n            style={{ marginLeft: \"10px\" }}\r\n            checked={this.state.show2016}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"show2016Checkbox\">\r\n            2016-\r\n          </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"show2017Checkbox\"\r\n            onChange={() => this.handleShow2017()}\r\n            style={{ marginLeft: \"10px\" }}\r\n            checked={this.state.show2017}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"show2017Checkbox\">\r\n            2017-\r\n          </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"show2018Checkbox\"\r\n            onChange={() => this.handleShow2018()}\r\n            style={{ marginLeft: \"10px\" }}\r\n            checked={this.state.show2018}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"show2018Checkbox\">\r\n            2018-\r\n          </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"show2019Checkbox\"\r\n            onChange={() => this.handleShow2019()}\r\n            style={{ marginLeft: \"10px\" }}\r\n            checked={this.state.show2019}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"show2019Checkbox\">\r\n            2019-\r\n          </label>{\" \"}\r\n        </div>\r\n\r\n        <Line\r\n          data={chartData}\r\n          options={chartOptions}\r\n          width={600}\r\n          redraw={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PointsLineChart;\r\n","import * as React from \"react\";\nimport \"./App.css\";\n\nimport PointsLineChart from \"./components/points-line-chart\";\n\nclass App extends React.Component {\n  public render() {\n    return <PointsLineChart />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}