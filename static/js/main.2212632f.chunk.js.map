{"version":3,"sources":["components/points2019.ts","components/points2016.ts","components/points2017.ts","components/points2018.ts","components/points2020.ts","components/points2021.ts","components/points-line-chart.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["points2019","points2016","points2017","points2018","points2020","points2021","PointsLineChart","state","showTrendLines","showYears","2016","2017","2018","2019","2020","2021","handleShowTrendLines","setState","prevState","nextState","handleShowYear","year","redLineColour","redLegendFillColour","purpleLineColour","purpleLegendFillColour","slateBlueLineColour","slateBlueLegendFillColour","greyLineColour","aliceBlueLineColour","aliceBlueLegendFillColour","greenLineColour","greenLegendFillColour","orangeLineColour","orangeLegendFillColour","defaultChartDataSet","fill","lineTension","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","pointsRunningTotalsPerYear","pointsPerYear","Object","prototype","hasOwnProperty","call","yearElement","index","length","nextElement","push","dataPointCount","labels","element","toString","chartData","datasets","this","label","backgroundColor","borderColor","pointBorderColor","pointHoverBackgroundColor","data","playoffFormValues","relegationFormValues","style","position","height","className","margin","type","id","onChange","htmlFor","keys","map","i","isNaN","key","display","marginLeft","checked","options","maintainAspectRatio","scales","yAxes","ticks","beginAtZero","scaleLabel","labelString","xAxes","width","redraw","React","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6UAAaA,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GC/CWC,EAAuB,CACpC,EAEA,EAAE,EAAE,EAAE,EAAE,EACR,EAAE,EAAE,EAAE,EAAE,EACR,EAAE,EAAE,EAAE,EAAE,EACR,EAAE,EAAE,EACJ,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EAAE,EAAE,EACV,EAAE,EAAE,EAAE,EACN,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EACZ,GCZaC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GChDWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GC/CWC,EAAuB,CAClC,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EACA,EACA,EACA,EACA,EACA,EACA,EAGA,EAGA,EACA,EACA,EACA,EACA,EACA,E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","file":"static/js/main.2212632f.chunk.js","sourcesContent":["export const points2019: number[] = [\r\n  0, // Dummy 0th result\r\n  0, // 0-2 Leeds (H)\r\n  1, // 1-1 Birmingham (A)\r\n  3, // 2-0 QPR (H)\r\n  3, // 1-2 Derby (A)\r\n  3, // 1-2 Hull (A)\r\n  1, // 2-2 Middlesbrough (H)\r\n  3, // 1-2 Stoke (A)\r\n  1, // 0-0 Swansea (H)\r\n  1, // 3-3 Preston (A)\r\n  1, // 1-1 Brentford (A)\r\n  3, // 1-0 Reading (H)\r\n  0, // 0-3 Luton (A)\r\n  3, // 2-1 Charlton (H)\r\n  1, // 2-2 Wigan (H)\r\n  1, // 2-2 Barnsley (A)\r\n  3, // 0-1 Cardiff (A)\r\n  1, // 0-0 Nottingham Forest (H)\r\n  0, // 4-1 West Bromich Albion (A)\r\n  3, // 5-2 Huddersfield (H)\r\n  3, // 1-2 Fulham (A)\r\n  0, // 1-2 Milwall (H)\r\n  0, // 0-2 Blackburn (H)\r\n  0, // 1-0 Sheffield Wednesday (A)\r\n  0, // 3-2 Charlton (A)\r\n  3, // 3-0 Luton (H)\r\n  0, // 0-4 Brentford (H)\r\n  3, // 0-2 Wigan (A)\r\n  3, // 1-0 Barnsley (H)\r\n  3, // 0-1 Reading (A)\r\n  3, // 0-1 QPR (A)\r\n  0, // 1-3 Birmingham (H)\r\n  3, // 3-2 Derby (H)\r\n  0, // 1-0 Leeds (A)\r\n  0, // 0-3 West Bromich Albion (H)\r\n  0, // 2-1 Huddersfield (A)\r\n  1, // 1-1 Millwall (A)\r\n  1, // 1-1 Fulham (H)\r\n  0, // 1-3 Blackburn (A)\r\n  0, // 1-2 Sheffield Wednesday (H)\r\n  0, // 0-1 Nottingham Forest (A)\r\n  0, // 0-1 Cardiff (H)\r\n  3, // 2-1 Hull (H)\r\n  3, // 1-3 Middlesbrough (A)\r\n  1, // 1-1 Stoke (H)\r\n  0, // 1-0 Swansea (A)\r\n  1, // 1-1 Preston (H)\r\n];\r\n","export const points2016: number[] = [\r\n0, // Dummy 0th result\r\n\r\n3,3,0,0,3,        // Aug\r\n1,0,1,3,3,        // Sep\r\n3,0,0,3,1,        // Oct\r\n0,0,0,            // Nov\r\n3,0,0,0,0,0,      // Dec\r\n0,0,0,1,          // Jan\r\n3,1,0,0,1,0,      // Feb \r\n1,1,3,3,          // Mar\r\n0,0,3,3,1,3,3,    // Apr \r\n0                 // May\r\n];\r\n","export const points2017: number[] = [\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  1,\r\n  1,\r\n  3,\r\n  1,\r\n  3,\r\n  1,\r\n  3, // 26 Sep\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  3,\r\n  1,\r\n  0,\r\n  3,\r\n  3, // 3 Dec\r\n  3,\r\n  3,\r\n  1,\r\n  3,\r\n  0, // 30 Dec\r\n\r\n  0,\r\n  0,\r\n  1,\r\n  3,\r\n  0, // 2 Feb 2018\r\n  1,\r\n  1,\r\n  1,\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  3,\r\n  1,\r\n  0, // 2 Apr 2018\r\n  0,\r\n  3,\r\n  0,\r\n  1,\r\n  1,\r\n  0\r\n];\r\n","export const points2018: number[] = [\r\n  0,\r\n  1,\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  3,\r\n  3,\r\n  0,\r\n  0,\r\n  1, // 28 Sep\r\n  1,\r\n  0,\r\n  3,\r\n  3,\r\n  0,\r\n  0, // 03 Nov\r\n  0,\r\n  0,\r\n  3,\r\n  1,\r\n  3, // 08 Dec\r\n  1,\r\n  1,\r\n  1,\r\n  3, // 29 Dec\r\n  3,\r\n  3,\r\n  3,\r\n  3,\r\n  3, // 09 Feb\r\n  3,\r\n  0,\r\n  0,\r\n  1,\r\n  0,\r\n  1,\r\n  3, // 30 Mar\r\n  3,\r\n  1,\r\n  3,\r\n  0,\r\n  1,\r\n  0,\r\n  0,\r\n  3,\r\n  1\r\n];\r\n","export const points2020: number[] = [\r\n  0, // Dummy 0th result\r\n  3, // 2-1 Coventry City (H)\r\n  3, // 0-2 Stoke City (A)\r\n  3, // 2-0 Sheffield Wednesday (H)\r\n  3, // 1-2 Nottingham Forest (A)\r\n  1, // 2-2 Barnsley (A)\r\n  0, // 0-1 Middlesbrough (H)\r\n  1, // 1-1 Swansea (H)\r\n  0, // 0-1 Bournemouth (A)\r\n  0, // 1-3 Norwich (H)\r\n  3, // 1-2 Huddersfield (A)\r\n  3, // 0-1 Cardiff (A)\r\n  3, // 1-0 Derby (H)\r\n  1, // 0-0 Watford (H)\r\n  0, // 3-1 Reading (A)\r\n  3, // 1-2 QPR (A)\r\n  0, // 0-1 Birmingham (H)\r\n  3, // 1-0 Blackburn (H)\r\n  0, // 2-0 Rotherham (A)\r\n  0, // 0-2 Millwall (H)\r\n  0, // 1-0 Preston (A)\r\n  3, // 2-1 Wycombe (H)\r\n  0, // 2-1 Luton (A)\r\n  3, // 2-0 Preston (H)\r\n  \r\n  0, // 2-0 Norwich (A)\r\n  3, // 2-1 Huddersfield (H)\r\n  0, // 1-0 Derby (A)\r\n  0, // 3-2 Brenford (A)\r\n  0, // 0-2 Cardiff (H)\r\n  0, // 6-0 Watford (A)\r\n  0, // 0-2 Reading (H)\r\n\r\n     // Holden sacked before this match\r\n  0, // 0-1 Barnsley (H)\r\n\r\n     // Pearson appointed\r\n  3, // 1-3 Middlesbrough (A)\r\n  3, // 1-3 Swansea (A)\r\n  0, // 1-2 Bournemouth (H)\r\n  0, // 0-2 QPR (H)\r\n  3, // 0-3 Birmingham (A)\r\n  1, // 0-0 Blackburn (A)\r\n  0, // 0-2 Rotherham (H)\r\n  0, // 0-2 Stoke City (H)\r\n  0, // 3-1 Coventry City (A)\r\n  1, // 0-0 Nottingham Forest (H)\r\n  1, // 1-1 Sheffield Wednesday (A)\r\n  0, // 2-1 Wycombe (A)\r\n  0, // 2-3 Luton (H)\r\n  0, // 4-1 Millwall (A)\r\n  0, // 1-3 Brentford (H)\r\n];\r\n","export const points2021: number[] = [\r\n  0, // Dummy 0th result\r\n  // 1, // 1-1 Blackpool (H)\r\n  // 0, // 0-2 Stoke City (A)\r\n  // 1, // 2-0 Sheffield Wednesday (H)\r\n  // 0, // 1-2 Nottingham Forest (A)\r\n];\r\n","import * as React from \"react\";\r\n\r\nimport { Line, ChartData } from \"react-chartjs-2\";\r\nimport * as chartjs from \"chart.js\";\r\nimport { points2019 } from \"./points2019\";\r\nimport { points2016 } from \"./points2016\";\r\nimport { points2017 } from \"./points2017\";\r\nimport { points2018 } from \"./points2018\";\r\nimport { points2020 } from \"./points2020\";\r\nimport { points2021 } from \"./points2021\";\r\ninterface PointsLineChartProps { }\r\n\r\ntype ShowYears = {\r\n  [year: number]: boolean;\r\n}\r\n\r\ntype PointsPerYear = {\r\n  [year: number]: number[];\r\n}\r\n\r\ninterface PointsLineChartState {\r\n  showTrendLines: boolean;\r\n\r\n  showYears: ShowYears;\r\n}\r\n\r\nclass PointsLineChart extends React.Component<\r\n  PointsLineChartProps,\r\n  PointsLineChartState\r\n> {\r\n  state = {\r\n    showTrendLines: false,\r\n\r\n    showYears: {\r\n      2016: false,\r\n      2017: false,\r\n      2018: false,\r\n      2019: true,\r\n      2020: true,\r\n      2021: true\r\n    }\r\n  };\r\n\r\n  handleShowTrendLines = () => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showTrendLines = !prevState.showTrendLines;\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  handleShowYear = (year: number) => {\r\n    this.setState(prevState => {\r\n      const nextState = { ...prevState };\r\n      nextState.showYears[year] = !prevState.showYears[year];\r\n\r\n      return nextState;\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const redRgba = \"255, 0, 0\";\r\n    const redLineColour = `rgba(${redRgba}, 1)`;\r\n    const redLegendFillColour = `rgba(${redRgba}, 0.4)`;\r\n\r\n    // 128, 0, 128\r\n    const purpleRgba = \"85, 85, 85\";\r\n    const purpleLineColour = `rgba(${purpleRgba}, 1)`;\r\n    const purpleLegendFillColour = `rgba(${purpleRgba}, 0.4)`;\r\n\r\n    const slateBlueRgba = \"0, 100, 0\";\r\n    const slateBlueLineColour = `rgba(${slateBlueRgba}, 1)`;\r\n    const slateBlueLegendFillColour = `rgba(${slateBlueRgba}, 0.4)`;\r\n\r\n    const greyRgba = \"220, 220, 220\";\r\n    const greyLineColour = `rgba(${greyRgba}, 1)`;\r\n    // const greyLegendFillColour = `rgba(${greyRgba}, 0.4)`;\r\n\r\n    // 2016 - Alice Blue\r\n    const aliceBlueRgba = \"0, 0, 255\";\r\n    const aliceBlueLineColour = `rgba(${aliceBlueRgba}, 1)`;\r\n    const aliceBlueLegendFillColour = `rgba(${aliceBlueRgba}, 0.4)`;\r\n\r\n    const greenRgba = \"75, 192, 192\";\r\n    const greenLineColour = `rgba(${greenRgba}, 1)`;\r\n    const greenLegendFillColour = `rgba(${greenRgba}, 0.4)`;\r\n\r\n    const orangeRgba = \"255, 165, 0\";\r\n    const orangeLineColour = `rgba(${orangeRgba}, 1)`;\r\n    const orangeLegendFillColour = `rgba(${orangeRgba}, 0.4)`;\r\n\r\n    const defaultChartDataSet: chartjs.ChartDataSets = {\r\n      // label: \"2016-\",\r\n      fill: false,\r\n      lineTension: 0.1,\r\n\r\n      // backgroundColor: aliceBlueLegendFillColour,\r\n      // borderColor: aliceBlueLineColour,\r\n\r\n      borderCapStyle: \"butt\",\r\n      borderDash: [3, 3],\r\n      borderDashOffset: 0.0,\r\n      borderJoinStyle: \"miter\",\r\n\r\n      // pointBorderColor: aliceBlueLineColour,\r\n\r\n      pointBackgroundColor: \"#fff\",\r\n      pointBorderWidth: 1,\r\n      pointHoverRadius: 5,\r\n\r\n      // pointHoverBackgroundColor: aliceBlueLineColour,\r\n\r\n      pointHoverBorderColor: greyLineColour,\r\n      pointHoverBorderWidth: 2,\r\n      pointRadius: 1,\r\n      pointHitRadius: 10,\r\n      // data: pointsRunningTotalsPerYear[2016]\r\n    }\r\n\r\n    const pointsRunningTotalsPerYear: PointsPerYear = {\r\n      2016: [],\r\n      2017: [],\r\n      2018: [],\r\n      2019: [],\r\n      2020: [],\r\n      2021: [],\r\n    }\r\n\r\n    const pointsPerYear: PointsPerYear = {\r\n      2016: points2016,\r\n      2017: points2017,\r\n      2018: points2018,\r\n      2019: points2019,\r\n      2020: points2020,\r\n      2021: points2021,\r\n    }\r\n\r\n    for (const year in pointsRunningTotalsPerYear) {\r\n      if (Object.prototype.hasOwnProperty.call(pointsRunningTotalsPerYear, year)) {\r\n        const yearElement = pointsRunningTotalsPerYear[year];\r\n\r\n        for (let index = 0; index < pointsPerYear[year].length; index++) {\r\n          const runningTotal = index === 0 ? 0 : yearElement[index - 1];\r\n\r\n          const nextElement = runningTotal + pointsPerYear[year][index];\r\n\r\n          yearElement.push(nextElement);\r\n        }\r\n      }\r\n    }\r\n\r\n    const dataPointCount = pointsPerYear[2016].length;\r\n\r\n    const labels: string[] = [];\r\n\r\n    for (let index = 0; index < dataPointCount; index++) {\r\n      const gameNumber = index;\r\n\r\n      const element =\r\n        (gameNumber % 5 === 0 ||\r\n          gameNumber === 1 ||\r\n          gameNumber === 23 ||\r\n          gameNumber === 46) &&\r\n          gameNumber !== 45\r\n          ? gameNumber.toString(10)\r\n          : \"\";\r\n\r\n      labels.push(element);\r\n    }\r\n\r\n    const chartData: ChartData<chartjs.ChartData> = {\r\n      labels: labels,\r\n\r\n      datasets: []\r\n    };\r\n\r\n    if (this.state.showYears[2016]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2016-\",\r\n          backgroundColor: aliceBlueLegendFillColour,\r\n          borderColor: aliceBlueLineColour,\r\n          pointBorderColor: aliceBlueLineColour,\r\n          pointHoverBackgroundColor: aliceBlueLineColour,\r\n          data: pointsRunningTotalsPerYear[2016],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2017]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2017-\",\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n          pointBorderColor: purpleLineColour,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          data: pointsRunningTotalsPerYear[2017],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2018]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2018-\",\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          data: pointsRunningTotalsPerYear[2018],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2019]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2019-\",\r\n          backgroundColor: slateBlueLegendFillColour,\r\n          borderColor: slateBlueLineColour,\r\n          pointBorderColor: slateBlueLineColour,\r\n          pointHoverBackgroundColor: slateBlueLineColour,\r\n          borderDash: [],\r\n          data: pointsRunningTotalsPerYear[2019],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2020]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2020-\",\r\n          backgroundColor: purpleLegendFillColour,\r\n          borderColor: purpleLineColour,\r\n          pointBorderColor: purpleLineColour,\r\n          pointHoverBackgroundColor: purpleLineColour,\r\n          borderDash: [],\r\n          data: pointsRunningTotalsPerYear[2020],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showYears[2021]) {\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"2021-\",\r\n          backgroundColor: redLegendFillColour,\r\n          borderColor: redLineColour,\r\n          pointBorderColor: redLineColour,\r\n          pointHoverBackgroundColor: redLineColour,\r\n          borderDash: [],\r\n          data: pointsRunningTotalsPerYear[2021],\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.state.showTrendLines) {\r\n      const playoffFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        // const element = (index + 1) * 1.7;\r\n        const element = index * 1.61;\r\n        playoffFormValues.push(element);\r\n      }\r\n\r\n      const relegationFormValues: number[] = [];\r\n\r\n      for (let index = 0; index < dataPointCount; index++) {\r\n        const element = index * 1.0;\r\n        relegationFormValues.push(element);\r\n      }\r\n\r\n      if (chartData.datasets) {\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"Playoffs\",\r\n          backgroundColor: greenLegendFillColour,\r\n          borderColor: greenLineColour,\r\n          pointBorderColor: greenLineColour,\r\n          pointHoverBackgroundColor: greenLineColour,\r\n          borderDash: [5, 15],\r\n          data: playoffFormValues,\r\n        });\r\n\r\n        chartData.datasets.push({\r\n          ...defaultChartDataSet,\r\n          label: \"Relegation\",\r\n          backgroundColor: orangeLegendFillColour,\r\n          borderColor: orangeLineColour,\r\n          pointBorderColor: orangeLineColour,\r\n          pointHoverBackgroundColor: orangeLineColour,\r\n          borderDash: [5, 15],\r\n          data: relegationFormValues,\r\n        });\r\n      }\r\n    }\r\n\r\n    const chartOptions = {\r\n      // responsive: true,\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true\r\n            },\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Points Total\"\r\n            }\r\n          }\r\n        ],\r\n        xAxes: [\r\n          {\r\n            scaleLabel: {\r\n              display: true,\r\n              labelString: \"Games Played\"\r\n            }\r\n          }\r\n        ]\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div style={{ position: \"relative\", height: \"80vh\" }}>\r\n        <div\r\n          className=\"custom-control custom-checkbox\"\r\n          style={{ margin: \"10px 30px 5px 25px\" }}\r\n        >\r\n          <label className=\"custom-control-label\">Show: </label>{\" \"}\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"custom-control-input\"\r\n            id=\"customCheck1\"\r\n            onChange={() => this.handleShowTrendLines()}\r\n          />\r\n          <label className=\"custom-control-label\" htmlFor=\"customCheck1\">\r\n            Trend Lines\r\n          </label>\r\n\r\n          {\r\n            Object.keys(pointsRunningTotalsPerYear).map(i =>\r\n            (!isNaN(+i) &&\r\n              <div key={+i} style={{ display: \"inline\" }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  className=\"custom-control-input\"\r\n                  id={`show${i}Checkbox`}\r\n                  onChange={() => this.handleShowYear(+i)}\r\n                  style={{ marginLeft: \"10px\" }}\r\n                  checked={(this.state.showYears as any)[i]} />\r\n                <label className=\"custom-control-label\" htmlFor={`show${i}Checkbox`}>\r\n                  {i}-\r\n                </label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n\r\n        <Line\r\n          data={chartData}\r\n          options={chartOptions}\r\n          width={600}\r\n          redraw={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PointsLineChart;\r\n","import * as React from \"react\";\nimport \"./App.css\";\n\nimport PointsLineChart from \"./components/points-line-chart\";\n\nclass App extends React.Component {\n  public render() {\n    return <PointsLineChart />;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}